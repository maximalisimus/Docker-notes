

ROOT.

$ mkdir npm && cd npm

$ sudo podman pod create --name npm -p 80:80 -p 81:81 -p 443:443

$ mkdir -p ./data/mysql ./letsencrypt

$ sudo podman run -d --pod npm --name=npmanager \
--restart=unless-stopped \
-v ./data:/data \
-v ./letsencrypt:/etc/letsencrypt \
-e DB_MYSQL_HOST="npmdb" \
-e DB_MYSQL_PORT="3306" \
-e DB_MYSQL_USER="npm" \
-e DB_MYSQL_PASSWORD="npm" \
-e DB_MYSQL_NAME="npm" \
docker.io/jc21/nginx-proxy-manager:latest

$ sudo podman run -d --pod npm --name=npmdb \
--expose=3306 --restart=unless-stopped \
-v ./data/mysql:/var/lib/mysql \
--restart=unless-stopped \
-e MYSQL_ROOT_PASSWORD="npm" \
-e MYSQL_DATABASE="npm" \
-e MYSQL_USER="npm" \
-e MYSQL_PASSWORD="npm" \
docker.io/jc21/mariadb-aria:latest

Email:    admin@example.com
Password: changeme

$ sudo podman generate kube npm -f ./npm-root.yaml

nano npm-root.yaml

# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.0.1
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-02-22T13:55:23Z"
  labels:
    app: npm
  name: npm
spec:
  containers:
  - command:
    - /init
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: podman
    - name: S6_FIX_ATTRS_HIDDEN
      value: "1"
    - name: DB_MYSQL_HOST
      value: npmdb
    - name: DB_MYSQL_NAME
      value: npm
    - name: NPM_BUILD_COMMIT
      value: c688747
    - name: CURL_CA_BUNDLE
      value: /etc/ssl/certs/ca-certificates.crt
    - name: OPENRESTY_VERSION
      value: 1.19.9.1
    - name: NODE_ENV
      value: production
    - name: NPM_BUILD_DATE
      value: 2022-02-19 12:02:37 UTC
    - name: S6_BEHAVIOUR_IF_STAGE2_FAILS
      value: "1"
    - name: NPM_BUILD_VERSION
      value: 2.9.16
    - name: DB_MYSQL_PORT
      value: "3306"
    - name: DB_MYSQL_USER
      value: npm
    - name: SSL_CERT_FILE
      value: /etc/ssl/certs/ca-certificates.crt
    - name: SUPPRESS_NO_CONFIG_WARNING
      value: "1"
    - name: DB_MYSQL_PASSWORD
      value: npm
    image: docker.io/jc21/nginx-proxy-manager:latest
    name: npmanager
    ports:
    - containerPort: 80
      hostPort: 80
      protocol: TCP
    - containerPort: 81
      hostPort: 81
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    volumeMounts:
    - mountPath: /data
      name: home-mikl-npm-data
    - mountPath: /etc/letsencrypt
      name: home-mikl-npm-letsencrypt
    workingDir: /app
  - command:
    - /scripts/run.sh
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: podman
    - name: MYSQL_ROOT_PASSWORD
      value: npm
    - name: MYSQL_DATABASE
      value: npm
    - name: MYSQL_USER
      value: npm
    - name: MYSQL_PASSWORD
      value: npm
    image: docker.io/jc21/mariadb-aria:latest
    name: npmdb
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    volumeMounts:
    - mountPath: /var/lib/mysql
      name: home-mikl-npm-data-mysql
    workingDir: /
  dnsConfig: {}
  restartPolicy: Never
  volumes:
  - hostPath:
      path: /home/mikl/npm/data
      type: Directory
    name: home-mikl-npm-data
  - hostPath:
      path: /home/mikl/npm/letsencrypt
      type: Directory
    name: home-mikl-npm-letsencrypt
  - hostPath:
      path: /home/mikl/npm/data/mysql
      type: Directory
    name: home-mikl-npm-data-mysql
status: {}



$ sudo podman generate systemd --restart-policy=always -t 1 --files --name npm

container-npmanager.service
container-npmdb.service
pod-npm.service

nano container-npmanager.service

# container-npmanager.service
# autogenerated by Podman 3.0.1
# Tue Feb 22 17:00:11 MSK 2022

[Unit]
Description=Podman container-npmanager.service
Documentation=man:podman-generate-systemd(1)
Wants=network.target
After=network-online.target
BindsTo=pod-npm.service
After=pod-npm.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
TimeoutStopSec=61
ExecStart=/usr/bin/podman start npmanager
ExecStop=/usr/bin/podman stop -t 1 npmanager
ExecStopPost=/usr/bin/podman stop -t 1 npmanager
PIDFile=/run/containers/storage/overlay-containers/e68fe2e7770b8f05f0a66dbcc9bf11f7b44be590602f483f605e58a53d9f9c89/userdata/conmon.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target


nano container-npmdb.service

# container-npmdb.service
# autogenerated by Podman 3.0.1
# Tue Feb 22 17:00:11 MSK 2022

[Unit]
Description=Podman container-npmdb.service
Documentation=man:podman-generate-systemd(1)
Wants=network.target
After=network-online.target
BindsTo=pod-npm.service
After=pod-npm.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
TimeoutStopSec=61
ExecStart=/usr/bin/podman start npmdb
ExecStop=/usr/bin/podman stop -t 1 npmdb
ExecStopPost=/usr/bin/podman stop -t 1 npmdb
PIDFile=/run/containers/storage/overlay-containers/f87ecb6f6694c437a7b3bb81126f1c7d342a4756ff219483abe702479ae4ade6/userdata/conmon.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target


nano pod-npm.service

# pod-npm.service
# autogenerated by Podman 3.0.1
# Tue Feb 22 17:00:11 MSK 2022

[Unit]
Description=Podman pod-npm.service
Documentation=man:podman-generate-systemd(1)
Wants=network.target
After=network-online.target
Requires=container-npmanager.service container-npmdb.service
Before=container-npmanager.service container-npmdb.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
TimeoutStopSec=61
ExecStart=/usr/bin/podman start 39437f208599-infra
ExecStop=/usr/bin/podman stop -t 1 39437f208599-infra
ExecStopPost=/usr/bin/podman stop -t 1 39437f208599-infra
PIDFile=/run/containers/storage/overlay-containers/2cca03666296297bd953e416fb2c0e2e9d3f5031bdef9bec8d2f770c4d89b402/userdata/conmon.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target













