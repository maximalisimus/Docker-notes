

-----------------------------------------------------------------------

podman
podman-compose
podman-docker
podman-dnsname
buildah
cockpit
cockpit-podman



Example.

[user@rhel8~]$ podman search ssh

[user@rhel8~]$ grep registries /etc/containers/registries.conf

[user@rhel8~]$ podman search registry

[user@rhel8~]$ podman pull docker.io/library/regisrty

[user@rhel8~]$ podman images

[user@rhel8~]$ mkdir registry

[user@rhel8~]$ podman run --name myregistry -p 5000:5000 -v /home/mikl/registry:/var/lib/registry:Z -d registry

[user@rhel8~]$ podman ps

[user@rhel8~]$ podman logs myregistry

[user@rhel8~]$ podman -it myregistry sh

[user@rhel8~]$ podman -exec -d myregistry touch /var/lib/registry/file
[user@rhel8~]$ ls registry/
[user@rhel8~]$ rm -rf registry/file

[user@rhel8~]$ podman images

[user@rhel8~]$ podman tag docker.io/library/regisrty:latest rhel8:5000/registry

[user@rhel8~]$ podman images

[user@rhel8~]$ podman push rhel8:5000/registry

...Error...HTTPS...

[user@rhel8~]$ sudo nano /etc/containers/registries.conf

[[registry]]
location = "rhel8:5000"
insecure=true

[user@rhel8~]$ podman push rhel8:5000/registry

OK

[user@rhel8~]$ ls registry/docker/registry/v2/

[user@rhel8~]$ podman images

[user@rhel8~]$ podman images rm docker.io/library/regisrty

Untagged:...

[user@rhel8~]$ podman search httpd | head 3

...
fedoraproject.org registry.fedoraproject.org/f29/httpd ...

[user@rhel8~]$ skopeo copy docker://registry.fedoraproject.org/f29/httpd docker://rhel8:5000/httpd

[user@rhel8~]$ podman search rhel8:5000/httpd

[user@rhel8~]$ podman pull rhel8:5000/httpd

[user@rhel8~]$ podman images



[user@rhel8~]$ podman generate systemd --restart-policy=always -t 1 --files --name myregistry

/home/user/container-myregistry.service

[user@rhel8~]$ mkdir -p ~/.config/systemd/user/

[user@rhel8~]$ cp container-myregistry.service ~/.config/systemd/user/

[user@rhel8~]$ systemctl --user enable container-myregistry.service

[user@rhel8~]$ loginctl enable-linger user

[user@rhel8~]$ sudo reboot

mikl@mikl -> ssh root@rhel

[user@rhel8~]$  nc -zv localhost 5000
...
Ncat: Connected to ::1:5000
...
[user@rhel8~]$ podman ps
...
[user@rhel8~]$ su - user

[user@rhel8~]$ podman ps



IF NEED 80 PORT.

[user@rhel8~]$ sudo firewall-cmd --add-forward-port=port=80:proto=tcp:toport=5000 --permanent

[user@rhel8~]$ sudo firewall-cmd --reload


cockpit: https:ip:9090/podman





The Digital Life.

root: useradd xcad -m -s /bin/bash -c "admin user"
root: usermod -aG sudo xcad
root: passwd xcad
root: mkdir -p /home/xcad/.ssh/

paste the ssh public.key to /home/xcad/.ssh/autorized_keys 

root: chown xcad:xcad /home/xcad/.ssh/authorized_keys
root: exit

ssh xcad@ip


sudo apt install podman cockpit cockpit-podman -y
sudo systemctl status cockpit

Browser
https://ip:9090
The SSL certificate to self signed is CORRECT.

$ pip3 install podman-compose
$ nano ~/.bashrc
export PATH=$PATH:/$HOME/.local/bin/

$ cd opt
$ sudo mkdir npm
$ sudo chown xcad:xcad npm

$ nano docker-compose.yml

version: '3'
services:
  app:
    image: 'docker.io/jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
  db:
    image: 'docker.io/jc21/mariadb-aria:latest'
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped



mkdir -p data/mysql letsecrypt

podman-compose up -d

Error to PORT 80 and 443.

nano /etc/sysctl.conf

net.ipv4.ip_unprivileged_port_start=80

sudo sysctl -p

podman-compose up -d

podman ps --all

SSL to cockpit.
Nginx Proxy Manager - generate SSL certificate and Proxy Host to domain.

$ ip a
1. lo: ...
...
2: eht0
inet 104.248.38.139/20 brd 104.248.47.255 scrope global eth0
inet 10.19.0.8/16 brd 10.19.255.255 scope global eth0
...


Nginx Proxy Manager - Proxy Host.
Details:
my.example.com
https 10.19.0.8 9090
Block Common Exploits
Websockets Support

SSL:
Force SSL
HTTP/2 Support
HSTS Enabled

Domain active and STOP 10.19.0.8 public ip address = access denied.

sudo mkdir -p /etc/systemd/system/cockpit.socket.d
sudo nano /etc/systemd/system/cockpit.socket.d/listen.conf

[Socket]
ListenStream=
ListenStream=10.19.0.8:9090
FreeBind=yes

sudo systemctl daemon-reload
sudo systemctl restart cockpit









podman login docker.io




ln -sf /var/run/podman/podman.sock /var/run/docker.sock
sudo systemctl enable --now podman.socket
systemctl --user enable --now podman.socket

podman run -d -p 9000:9000 --privileged --name=portainer --restart=always -v /run/user/$(id -u)/podman/podman.sock:/var/run/docker.sock:Z -v portainer_data:/data docker.io/portainer/portainer-ce


podman pod list

$ podman ps -a
CONTAINER ID  IMAGE                      COMMAND               CREATED         STATUS             PORTS                   NAMES
3636bbe05344  localhost/ol8_ords:latest  /bin/sh -c exec $...  17 minutes ago  Up 17 minutes ago  0.0.0.0:1521->1521/tcp  ol8_ords_con
3dfe524b96dc  localhost/ol8_19:latest    /bin/sh -c exec $...  17 minutes ago  Up 17 minutes ago  0.0.0.0:1521->1521/tcp  ol8_19_con
74a62f158f25  k8s.gcr.io/pause:3.1                             17 minutes ago  Up 17 minutes ago  0.0.0.0:1521->1521/tcp  9a42ad992aa6-infra
$

$ podman generate kube my_pod -f /tmp/my_pod_kube.yaml

Play a Kubernetes YAML File

podman rm -vf ol8_ords_con
podman rm -vf ol8_19_con
podman pod rm my_pod

$ podman ps -a
CONTAINER ID  IMAGE  COMMAND  CREATED  STATUS  PORTS  NAMES
$

$ podman play kube /tmp/my_pod_kube_compact.yaml
Pod:
ca53a71fecd8aa19a868739695624b4682fc3818e4889dff331284ec824afd15
Containers:
e8b5f9da27a9ee8b9c77cc0c799cf2e197bbb44df5b5aecc78b09ffabd52dcc0
b1944c9bf62e9947b073ecc9ac2420741a05bdb191c4b4f39c3f843b8e54a519
$

$ podman pod list
POD ID         NAME     STATUS    CREATED          # OF CONTAINERS   INFRA ID
ca53a71fecd8   my_pod   Running   24 seconds ago   3                 9df5f3af12f1
$

$ podman ps -a
CONTAINER ID  IMAGE                      COMMAND               CREATED         STATUS             PORTS                   NAMES
b1944c9bf62e  localhost/ol8_ords:latest  /bin/sh -c exec $...  41 seconds ago  Up 40 seconds ago  0.0.0.0:1521->1521/tcp  ol8_ords_con
e8b5f9da27a9  localhost/ol8_19:latest    /bin/sh -c exec $...  41 seconds ago  Up 40 seconds ago  0.0.0.0:1521->1521/tcp  ol8_19_con
9df5f3af12f1  k8s.gcr.io/pause:3.1                             41 seconds ago  Up 41 seconds ago  0.0.0.0:1521->1521/tcp  ca53a71fecd8-infra
$



podman generate kube webserver

podman generate kube webserver >> webserver.yaml







podman build -t scriptcamp/nginx .

podman push scriptcamp/nginx




$ podman pod create --name pod_names
$ podman ps -a --pod
$ podman run -dt --pod web alpine:latest top
# podman run -dt --pod new:web alpine:latest top

$ sudo podman pod create -p 8080:80 --name web1
$ sudo podman run -dt --pod web1 -p 8080 nginx:latest



Сетевые стеки Pod действуют как сетевой стек на хосте - 
у вас есть множество контейнеров в модуле и программы в контейнере, 
и все они используют один интерфейс, IP-адрес и связанные порты. 
Если один контейнер привязывается к порту, никакой другой контейнер не может использовать этот порт в модуле, 
пока он используется. Контейнеры в модуле также могут взаимодействовать через localhost, 
если один контейнер привязан к localhost в модуле, а другой - к этому порту.

podman pod create --name srcview -p 127.0.0.1:3434:3434 -p 127.0.0.1:7080:7080 -p 127.0.0.1:3370:3370
podman run --pod srcview --name src-expose -v "${PWD}:/var/opt/localrepo":Z,ro sourcegraph/src-expose:latest serve /var/opt/localrepo




























